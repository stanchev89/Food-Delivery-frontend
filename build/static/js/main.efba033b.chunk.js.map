{"version":3,"sources":["environments.js","helpers/index.js","services/userService.js","services/foodService.js","components/Header/Header.js","components/Footer/Footer.js","components/Menu/DishItem/DishItem.js","components/Cart/CartItem/CartItem.js","components/Cart/Cart.js","components/Login/Login.js","components/Menu/Menu.js","components/Register/Register.js","components/Logout/Logout.js","components/Profile/AddNewAddressForm/AddNewAddressForm.js","components/Order/OrderAddress/OrderAddress.js","components/Order/OrderPayment/OrderPayment.js","components/Order/OrderDescription/OrderDescription.js","components/Order/Order.js","components/Contacts/Contacts.js","services/postService.js","components/Posts/PostItem/PostItem.js","components/Posts/Posts.js","components/About/About.js","components/Conditions/Conditions.js","components/Notification/Notification.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/ProfileAddress/ProfileAddressItem/ProfileAddressItem.js","components/Profile/ProfileAddress/ProfileAddress.js","components/Profile/ProfileOrders/ShowOrderCart/ShowOrderCart.js","components/Profile/ProfileOrders/ProfileOrders.js","components/Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["environments","apiURL","regions","smolyan","raykovo","ustovo","kaptaja","mapBgRegions","fetchWithCredentials","path","method","body","fetch","headers","credentials","JSON","stringify","undefined","userService","login","username","password","then","res","json","catch","err","console","error","register","newUser","editUserData","data","getUserInfo","logout","initialCart","products","totalPrice","arraysEqual","arr1","arr2","length","every","o","idx","o1","o2","Object","keys","p","objectsEqual","calculateCartTotalPrice","cart","forEach","product","quantity","price","foodService","getDailyMenu","dishes","addToCart","user","item","addOrSubtract","exist","find","prod","name","selected_options","concat","userId","_id","removeItemFromCart","index","findIndex","splice","clearCart","Header","props","className","to","src","alt","exact","activeClassName","Footer","height","DishItem","dish","isLogged","img","join","weight","toFixed","onClick","bind","CartItem","onChangeItemQuantity","onRemoveItem","Number","label","Cart","setUser","match","action","onRemoveItemHandler","map","includes","Login","history","setNotification","useEffect","onSubmit","e","preventDefault","target","value","message","notification","type","push","htmlFor","id","placeholder","required","Menu","menu","filter","d","category","Register","phone","email","repeatPassword","mapRegions","AddNewAddressForm","toggleNewAddressForm","region","location","address","adr","delivery","newAddress","addAddress","key","OrderAddress","setOrder","order","useState","viewNewAddress","setViewNewAddress","prevState","onChange","selectedLocation","selected","OrderPayment","selectedPaymentHandler","paymentMethod","payment","OrderDescription","cols","rows","onBlur","description","Order","setDelivery","deliveryPerRegion","isNaN","newOrder","date","Date","toLocaleString","Contacts","class","postService","getPosts","createPost","post","editPost","deletePost","PostItem","likeHandler","setAllPosts","liked","setLiked","disliked","setDisliked","editMode","setEditMode","likeClickHandler","author","likes","dislikes","toggleEditMode","prev","editedPost","assign","title","posts","defaultValue","created_at","split","Posts","allPosts","likeAction","up","down","sort","a","b","parse","newPost","Notification","setTimeout","ProfileInfo","editModeToggle","checkForMinLength","obj","count","entries","Promise","reject","resolve","editUserInfoHandler","newData","invalidInputData","mongoError","curMessage","duplicatedProp","values","trim","disabled","ProfileAddressItem","onDeleteAddressHandler","onUpdateExistAddressHandler","setLocation","changes","ProfileAddress","addAddressMode","setAddAddressMode","ShowOrderCart","closeHandler","i","getCartProductsPrice","ProfileOrders","showCart","setShowCart","currentOrder","setCurrentOrder","toggleShowCart","orders","Profile","deleteAddress","oldAddress","newAddres","url","render","App","state","currentUser","setState","this","log","Logout","component","About","Conditions","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efba033b.chunk.js","sourcesContent":["const environments = {\n    apiURL: \"https://food-delivery-stanchev-backend.herokuapp.com/\",\n\tregions:{\n\t\tsmolyan: 0.5,\n\t\traykovo: 1.5,\n\t\tustovo: 1.5,\n\t\tkaptaja: 1.5\n\t},\n    mapBgRegions : {\n        smolyan: 'Смолян',\n        raykovo: 'Райково',\n        ustovo: 'Устово',\n        kaptaja: 'Каптажа'\n    }\n};\n\nexport default environments;\n","export function fetchWithCredentials(path,method,body) {\n    return fetch(path, {\n        method: method,\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n        body: body ? JSON.stringify(body) : undefined\n    });\n}\n\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n","import environments from \"../environments\";\nimport {fetchWithCredentials} from \"../helpers\";\nconst path = environments.apiURL;\n\n\nconst userService = {\n    \n    login: ( username, password ) => {\n        const fullPath = path + 'user/login';\n         return fetch(fullPath, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username,password})\n        })\n        .then(res => res.json())\n        .catch(err => console.error(err))\n    },\n    register: (newUser) => {\n        const fullPath =path + 'user/register';\n        return fetchWithCredentials(fullPath,'POST',newUser)\n            .then(res => res.json())\n            .catch(err => console.error(err))\n\n    },\n    editUserData: (data) => {\n        const fullPath = path +'user/profile';\n        return fetchWithCredentials(fullPath,'PUT',data)\n            .then(res => res.json())\n            .catch(console.error)\n    },\n    getUserInfo: () => {\n        const fullPath = path + 'user/profile';\n        return fetchWithCredentials(fullPath,'GET')\n            .then(res => res.json())\n            .catch(err => console.error(err));\n    },\n    logout: () => {\n        const fullPath = path + 'user/logout';\n        return fetchWithCredentials(fullPath,'POST')\n            .then(res => res.json())\n            .catch(console.error)\n    }\n};\n\nexport default userService;\n","import environments from \"../environments\";\nimport {fetchWithCredentials} from '../helpers'\n\nimport userService from \"./userService\";\nconst path = environments.apiURL;\nconst initialCart = {\n\tproducts:[],\n\ttotalPrice:0\n}\n\nfunction objectsEqual(o1, o2){\n\treturn typeof o1 === 'object' && Object.keys(o1).length > 0\n\t\t? Object.keys(o1).length === Object.keys(o2).length\n\t\t&& Object.keys(o1).every(p => this.objectsEqual(o1[p], o2[p]))\n\t\t: o1 === o2;\n}\nfunction arraysEqual(arr1, arr2){\n\treturn arr1.length === arr2.length && arr1.every((o, idx) => objectsEqual(o, arr2[idx]));\n}\nfunction calculateCartTotalPrice(cart){\n\tcart.totalPrice = 0;\n\tcart.products.forEach((product) => {\n\t\tcart.totalPrice += product.quantity * product.price;\n\t});\n\treturn cart.totalPrice;\n}\n\nconst foodService = {\n\tgetDailyMenu: function() {\n\t\tconst fullPath = path + \"dishes/\";\n\t\treturn fetchWithCredentials(fullPath).then((dishes) => dishes.json()).catch((err) => console.error(err));\n\t},\n\taddToCart: function (user,item,addOrSubtract) {\n\t\tconst cart = user.cart;\n\t\tconst exist = cart.products?.find((prod) =>\n\t\t\tprod.name === item.name\n\t\t\t&& prod.price === item.price\n\t\t\t&& arraysEqual(prod.selected_options, item.selected_options));\n\t\tif (exist) {\n\t\t\tif(!addOrSubtract) {\n\t\t\t\texist.quantity += 1;\n\t\t\t}else {\n\t\t\t\tif(exist.quantity === 0) {\n\t\t\t\t\texist.quantity ++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\titem.quantity = 1;\n\t\t\tcart.products = cart.products ? cart.products.concat(item) : [item];\n\t\t}\n\t\tcart.totalPrice = calculateCartTotalPrice(cart);\n\t\t\n\t\treturn userService.editUserData({cart: cart, userId: user._id});\n\t},\n\tremoveItemFromCart: function (user,item) {\n\t\tconst index = user.cart?.products?.findIndex(prod =>\n\t\t\tprod.name === item.name\n\t\t\t&& prod.price === item.price\n\t\t\t&& arraysEqual(prod.selected_options, item.selected_options)\n\t\t)\n\t\tuser.cart?.products?.splice(index,1);\n\t\tuser.cart.totalPrice = calculateCartTotalPrice(user.cart)\n\t\tconst data = {cart: user.cart, userId: user._id}\n\t\treturn userService.editUserData(data);\n\t},\n\tclearCart: (userId) => {\n\t\treturn userService.editUserData({cart: initialCart, userId})\n\t},\n};\n\nexport default foodService;\n","import \"./Header.css\";\nimport {NavLink, Link} from \"react-router-dom\";\nimport {FaUser, FaShoppingCart} from 'react-icons/fa';\nimport {FiLogOut} from 'react-icons/fi';\n\nfunction Header(props) {\n    const {user} = props;\n    return (\n        <article className=\"container-header\">\n            <article className=\"container-left\">\n                <Link to=\"/\">\n                    <img src=\"foodDelivery-icon.png\" alt=\"site-logo\" className=\"logo\"/>\n                </Link>\n            </article>\n\n            <article className=\"container-middle\">\n                <nav className=\"nav-bar\">\n                    <ul>\n                        <li>\n                            <NavLink to=\"/\"\n                                     exact\n                                     activeClassName=\"is-active\">\n                                Обедно меню\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/about\"\n                                     exact\n                                     activeClassName=\"is-active\">\n                                За нас\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/conditions\"\n                                     exact\n                                     activeClassName=\"is-active\"\n                            >\n                                Условия\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/posts\"\n                                     exact\n                                     activeClassName=\"is-active\">\n                                Мнения\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/contacts\"\n                                     exact\n                                     activeClassName=\"is-active\">\n                                Контакти\n                            </NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            </article>\n\n            <article className=\"container-right\">\n                <article className=\"user-bar\">\n                    {\n                        user?.username\n                            ? (\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/profile\" className=\"user-bar-username-wrapper\">\n                                            <p className=\"user-bar-username\">{user?.username}</p>\n                                            <FaUser/>\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/cart\">\n                                            <FaShoppingCart/>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to=\"/logout\">\n                                            <FiLogOut/>\n                                        </Link>\n                                    </li>\n                                </ul>\n                            )\n                            : (\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/login\" exact\n                                                 activeClassName=\"is-active\">\n                                            Вход\n                                        </NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink to=\"/register\"\n                                                 exact\n                                                 activeClassName=\"is-active\"\n                                        >Регистрация\n                                        </NavLink>\n                                    </li>\n                                </ul>\n                            )\n                    }\n\n                </article>\n            </article>\n        </article>\n    );\n}\n\nexport default Header;\n","import \"./Footer.css\";\nimport {Link} from 'react-router-dom'\n\nfunction Footer(props) {\n\treturn (\n\t\t<section className=\"footer\">\n            <nav className='footer-nav-bar'>\n\n                <ul>\n                    <li>\n                        <Link to=\"/\">Меню</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/about\">За нас</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/conditions\">Условия</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/posts\">Мнения</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/contacts\">Контакти</Link>\n                    </li>\n                </ul>\n\n            </nav>\n\n            <article className=\"footer-icons\">\n                <img height=\"40\" src=\"https://shoplineimg.com/assets/footer/card_visa.png\"/>\n                <img height=\"40\" src=\"https://shoplineimg.com/assets/footer/card_master.png\"/>\n                <img height=\"40\" src=\"https://shoplineimg.com/assets/footer/card_paypal.png\"/>\n            </article>\n\n\t\t\t<h5>Food Delivery &copy; 2021</h5>\n\t\t</section>\n\t);\n}\n\nexport default Footer;\n","import \"./DishItem.css\";\n\nfunction DishItem(props) {\n    const {dish, addToCart, isLogged} = props;\n    return (\n        <article className=\"dish\">\n            <img src={dish.img} alt=\"dish img\"/>\n            <article className=\"dish-content\">\n                <h3>{dish.name}</h3>\n                <ul className=\"products\">\n                    <p>Продукти: {dish.products.join(\", \")}</p>\n                </ul>\n                <p>{dish.weight} гр.</p>\n            </article>\n\n            <article className=\"dish-buy\">\n                <article className=\"dish-buy-options\"/>\n                <article className=\"dish-buy-order\">\n                    <h3 className=\"price\">{dish.price.toFixed(2)} лв.</h3>\n                    {\n                        isLogged\n                            ? <button className=\"price-btn\" onClick={addToCart.bind(null, dish)}>Добави</button>\n                            : null\n                    }\n                </article>\n            </article>\n        </article>\n    );\n}\n\nexport default DishItem;\n","import './CartItem.css';\nimport {IoIosArrowUp, IoIosArrowDown,IoIosBackspace} from 'react-icons/io';\n\nfunction CartItem({item, onChangeItemQuantity, onRemoveItem}) {\n\n    return (\n        <>\n            {\n                item ? (<article className=\"cart-item\">\n                        <h5 className=\"cart-item-title\">\n                            {item.name}\n                        </h5>\n                        <article className=\"cart-item-quantity\">\n                            <article className=\"cart-item-quantity-icons\">\n                                <IoIosArrowUp className=\"item-quantity-up\" onClick={onChangeItemQuantity.bind(null,item,\"add\")}/>\n                                <IoIosArrowDown className=\"item-quantity-down\" onClick={onChangeItemQuantity.bind(null,item,\"subtract\")}/>\n                            </article>\n                            <p> <strong>{item.quantity}</strong> * <i>{Number(item.price).toFixed(2)}</i> лв. =</p>\n                            <p className=\"item-total-price\">\n                                {Number(item.quantity * item.price).toFixed(2)} лв.\n                            </p>\n                            <IoIosBackspace\n                                className=\"cart-item-remove-icon\"\n                                label=\"Remove dish\"\n                                onClick={onRemoveItem.bind(null, item)}\n                            />\n                        </article>\n                    </article>)\n                    : <p>Loading...</p>\n            }\n        </>\n    )\n}\n\nexport default CartItem;","import './Cart.css';\nimport {FiShoppingCart} from 'react-icons/fi';\nimport {BsTrash} from 'react-icons/bs';\nimport CartItem from \"./CartItem/CartItem\";\nimport foodService from \"../../services/foodService\";\nimport {Link} from 'react-router-dom'\n\nfunction Cart(props) {\n    const {user, setUser, match} = props;\n    const onChangeItemQuantity = (item, action) => {\n        action === 'add' ? item.quantity++ : item.quantity--;\n        foodService.addToCart(user, item, action)\n            .then(user => setUser(user))\n            .catch(console.error);\n    }\n\n    const clearCart = () => {\n        foodService.clearCart(user._id)\n            .then(user => setUser(user))\n            .catch(console.error);\n    }\n\n    const onRemoveItemHandler = (dish) => {\n        foodService.removeItemFromCart(user, dish)\n            .then(user => setUser(user))\n            .catch(console.error);\n    }\n    return (\n        <section className=\"cart\">\n            <article className=\"cart-icon-wrapper\">\n                <FiShoppingCart className=\"cart-icon\"/>\n                <BsTrash className=\"cart-trash-icon\" onClick={clearCart}/>\n            </article>\n            {\n                user?.cart?.products?.length > 0\n                    ?\n                    <article className=\"cart-dishes\">\n                        <ul>\n                            {\n                                user?.cart?.products.map(item => (\n                                    <li key={item?.name}>\n                                        <CartItem item={item}\n                                                  onChangeItemQuantity={onChangeItemQuantity}\n                                                  onRemoveItem={onRemoveItemHandler}\n                                        />\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                        <article className=\"cart-summary\">\n                            <p className=\"cart-summary-text\">Общо</p>\n                            <article className=\"cart-summary-ctrl\">\n                                <p className=\"cart-total-price\">\n                                    {Number(user?.cart?.totalPrice).toFixed(2)} лв.\n                                </p>\n\n                                {\n                                    !match.path.includes('order')\n                                        ? <Link to=\"order\" >\n                                            <button className=\"cart-summary-btn\">Поръчай</button>\n                                        </Link>\n                                        : null\n                                }\n                            </article>\n\n                        </article>\n\n                    </article>\n                    : <p>Няма добавени продукти...</p>\n            }\n\n        </section>\n    )\n}\n\nexport default Cart;\n\n\n// <a *ngIf=\"(user$ | async).cart.products.length > 0\" routerLink=\"/cart\" class=\"cart-badge\">{{(user$ | async).cart.products.length}}</a>\n// <i class=\"fas fa-shopping-cart fa-2x\"></i>\n// <ng-container *ngTemplateOutlet=\" orderDetails ? details : cartProducts\"></ng-container>\n// <p class=\"empty-cart\" *ngIf=\"(user$ | async).cart.products.length === 0 && !orderCompleted\">Няма добавени продукти...</p>\n// <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"orderCompleted\">\n// <p>Вашата поръчка е приета.</p>\n// <p>Благодарим ви!</p>\n// <i class=\"fas fa-check-circle fa-5x\"></i>\n// </div>\n","import './Login.css';\nimport {FiLogIn} from \"react-icons/fi\";\nimport userService from \"../../services/userService\";\nimport { Link } from 'react-router-dom'\nimport {useEffect} from \"react\";\n\nconst Login = ({setUser, history, setNotification,...props}) => {\n\n    useEffect(() => {\n        return () => setNotification({});\n    },[]);\n\n    const onSubmitLoginHandler = (e) => {\n        e.preventDefault();\n        const username = e.target.username.value;\n        const password = e.target.password.value;\n        userService.login(username,password)\n            .then(res => {\n                if(res.message) {\n                    const notification = {\n                        message: res.message,\n                        type: 'error'\n                    };\n                    setNotification(notification);\n                }else {\n                    setNotification({});\n                    setUser(res)\n                    history.push('/')\n                }\n            })\n            .catch(console.error)\n    }\n\n    return (\n        <section className=\"login\">\n            <FiLogIn className=\"login-icon\" />\n            <article className=\"login-form\">\n                <form onSubmit={onSubmitLoginHandler}>\n                    <label htmlFor=\"username\">\n                        <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Потребителско име\" required={true}/>\n                    </label>\n                    <label htmlFor=\"password\">\n                        <input type=\"password\" placeholder=\"Парола\" name=\"password\" id=\"password\" required={true}/>\n                    </label>\n                    <button className=\"login-form-btn\">Влез</button>\n                    <Link to=\"/register\" className=\"login-form-to-register\">Регистрация</Link>\n                </form>\n            </article>\n        </section>\n    )\n}\nexport default Login;\n","import \"./Menu.css\";\nimport DishItem from \"./DishItem/DishItem\";\nimport Cart from \"../Cart/Cart\";\nimport foodService from \"../../services/foodService\";\nimport Login from \"../Login/Login\";\n\nfunction Menu(props) {\n    const {menu, user, setUser, match, history,setNotification} = props;\n    const addToCart = (dish) => {\n        foodService.addToCart(user, dish)\n            .then(user => {\n                setUser(user);\n            })\n            .catch(console.error)\n    }\n\n    return (\n        <section className=\"menu\">\n            <article className=\"food-list\">\n                <article className=\"salads\">\n                    <h2 className=\"food-list-title\">Салати</h2>\n                    <ul>\n                        {menu?.filter((d) => d.category === \"salad\").map((d) => (\n                            <li key={d._id}>\n                                <DishItem dish={d} addToCart={addToCart} isLogged={!!user}/>\n                            </li>\n                        ))}\n                    </ul>\n                </article>\n                <article className=\"soups\">\n                    <h2 className=\"food-list-title\">Супи</h2>\n                    <ul>\n                        {menu?.filter((d) => d.category === \"soup\").map((d) => (\n                            <li key={d._id}>\n                                <DishItem dish={d} addToCart={addToCart} isLogged={!!user}/>\n                            </li>\n                        ))}\n                    </ul>\n                </article>\n                <article className=\"main-dishes\">\n                    <h2 className=\"food-list-title\">Основни ястия</h2>\n                    <ul>\n                        {menu?.filter((d) => d.category === \"main\").map((d) => (\n                            <li key={d._id}>\n                                <DishItem dish={d} addToCart={addToCart} isLogged={!!user}/>\n                            </li>\n                        ))}\n                    </ul>\n                </article>\n                <article className=\"deserts\">\n                    <h2 className=\"food-list-title\">Десерти</h2>\n                    <ul>\n                        {menu?.filter((d) => d.category === \"desert\").map((d) => (\n                            <li key={d._id}>\n                                <DishItem dish={d} addToCart={addToCart} isLogged={!!user}/>\n                            </li>\n                        ))}\n                    </ul>\n                </article>\n                <article className=\"drinks\">\n                    <h2 className=\"food-list-title\">Напитки</h2>\n                    <ul>\n                        {menu?.filter((d) => d.category === \"drink\").map((d) => (\n                            <li key={d._id}>\n                                <DishItem dish={d} addToCart={addToCart} isLogged={!!user}/>\n                            </li>\n                        ))}\n                    </ul>\n                </article>\n            </article>\n            {\n                user\n                    ? <Cart user={user} setUser={setUser} match={match}/>\n                    : <Login setUser={setUser} history={history} setNotification={setNotification}/>\n            }\n        </section>\n    );\n}\n\nexport default Menu;\n","import './Register.css';\nimport {FiUserPlus} from 'react-icons/fi'\nimport userService from \"../../services/userService\";\nimport {useEffect} from \"react\";\n\nconst Register = ({history, setNotification}) => {\n    const invalidInput = false;\n    useEffect(() => {\n        return () => setNotification({});\n    },[])\n\n    const onSubmitRegisterHandler = (e) => {\n        e.preventDefault();\n        const newUser = {\n            username: e.target.username.value,\n            phone: e.target.phone.value,\n            email: e.target.email.value,\n            password: e.target.password.value,\n            repeatPassword: e.target.repeatPassword.value\n        }\n        userService.register(newUser)\n            .then(res => {\n                if(res.message !== 'Successful registration') {\n                    const notification = {\n                        message: res.message,\n                        type: 'error'\n                    }\n                    setNotification(notification);\n                }else {\n                    const notification = {\n                        message: 'Успешна регистрация!',\n                        type: 'success'\n                    }\n                    setNotification(notification);\n                    history.push('/login')\n                }\n            })\n            .catch(console.error)\n    }\n\n\n\n    return (\n        <section className=\"register\">\n            <FiUserPlus className=\"register-icon\" />\n            <article className=\"register-form\">\n                <form onSubmit={onSubmitRegisterHandler}>\n                    <label htmlFor=\"username\">\n                        <input type=\"text\"  name=\"username\" id=\"username\" placeholder=\"Потребителско име\" required={true}/>\n                    </label>\n                    <label htmlFor=\"phone\">\n                        <input type=\"text\" placeholder=\"Телефон\" name=\"phone\" id=\"phone\" required={true}/>\n                    </label>\n                    <label htmlFor=\"email\">\n                        <input type=\"email\" placeholder=\"Електронна поща\" name=\"email\" id=\"email\" required={true}/>\n                    </label>\n                    <label htmlFor=\"password\">\n                        <input type=\"password\" placeholder=\"Парола\" name=\"password\" id=\"password\" required={true}/>\n                    </label>\n                    <label htmlFor=\"repeatPassword\">\n                        <input type=\"password\" placeholder=\"Повторете паролата\" name=\"repeatPassword\" id=\"repeatPassword\" required={true}/>\n                    </label>\n                    <button className=\"register-form-btn\">Регистрирай ме</button>\n                </form>\n            </article>\n        </section>\n    );\n}\n\nexport default Register;\n","import userService from \"../../services/userService\";\n\nexport default ({history,setUser}) => {\n    userService.logout()\n        .then(() => {\n            setUser(undefined);\n            history.push('/')\n        })\n        .catch(console.error)\n\n    return (\n        null\n    )\n}","import './AddNewAddressForm.css';\nimport environments from \"../../../environments\";\nimport userService from \"../../../services/userService\";\n\nconst mapRegions = environments.regions;\nconst mapBgRegions = environments.mapBgRegions;\n\nfunction AddNewAddressForm({user,setUser,toggleNewAddressForm}) {\n\n    const addUserNewAddress = (e) => {\n        e.preventDefault();\n        const region = e.target.region?.value;\n        const location = e.target.location?.value;\n        const exist = user?.address?.find(adr => adr.location === location);\n        if(region && location && ! exist) {\n            const delivery = mapRegions[region];\n            const newAddress = {region, location, delivery}\n            userService.editUserData({addAddress: newAddress, userId: user._id})\n                .then(user => setUser(user))\n                .then(() => toggleNewAddressForm())\n                .catch(console.error)\n        }\n    };\n\n\n    return (\n        <article className=\"add-new-address\">\n            <p>Добавяне на нов адрес</p>\n            <form className=\"add-new-address-form\" onSubmit={addUserNewAddress}>\n                <label htmlFor=\"region\">Регион</label>\n                <select name=\"region\" id=\"region\">\n                    {\n                        Object.keys(mapRegions).map(key => (\n                            <option value={key} key={key}>{mapBgRegions[key]}</option>\n                        ))\n                    }\n                </select>\n                <label htmlFor=\"add-new-address\">Адрес</label>\n                <input type=\"text\" name=\"location\" id=\"add-new-address\"/>\n                <article className=\"add-new-address-form-ctrl\">\n                    <button type=\"button\" className=\"close-new-address-btn\"\n                            onClick={toggleNewAddressForm}>Затвори\n                    </button>\n                    <input type=\"submit\" className=\"confirm-new-address-btn\" value=\"Добави\"/>\n                </article>\n            </form>\n        </article>\n    )\n}\n\nexport default AddNewAddressForm;\n","import './OrderAddress.css';\nimport userService from \"../../../services/userService\";\nimport environments from \"../../../environments\";\nimport {useState, useEffect} from 'react';\nimport AddNewAddressForm from '../../Profile/AddNewAddressForm/AddNewAddressForm';\n\nconst mapBgRegions = environments.mapBgRegions;\nconst OrderAddress = ({user, order, setOrder, setUser}) => {\n\n    const [viewNewAddress, setViewNewAddress] = useState(false);\n\n    const toggleNewAddressForm = () => {\n        setViewNewAddress(prevState => !prevState);\n    };\n\n    useEffect(() => {\n        if(user?.address.length > 0) {\n            setOrder(prevState => ({...prevState,address: user.address[0]}))\n        }\n    },[user]);\n\n    const onSelectAddressHandler = (e) => {\n        const selectedLocation = e.target.value;\n        const selected = user?.address?.find(adr => adr.location === selectedLocation)\n        if(selected) {\n            const {region,location,delivery} = selected;\n            setOrder(prevState => ({...prevState, address: {region, location, delivery}}))\n        }\n    }\n    return (\n        <article className=\"order-address\">\n            <h3>Изберете адрес</h3>\n            {\n                viewNewAddress\n                    ? <AddNewAddressForm user={user} setUser={setUser} toggleNewAddressForm={toggleNewAddressForm}/>\n                    : <article className=\"my-address\">\n                        <form className=\"my-address-form\" onChange={onSelectAddressHandler}>\n                            <p>Моите адреси:</p>\n                            <select name=\"address\" id=\"address\">\n                                {\n                                    user?.address.map(adr => (\n                                        <option key={adr.location} value={adr.location}>{adr.location}, {mapBgRegions[adr.region]}</option>\n                                    ))\n                                }\n                            </select>\n                        </form>\n                        <button className=\"add-new-address-btn\" onClick={toggleNewAddressForm}>Добави нов адрес</button>\n                    </article>\n\n            }\n\n        </article>\n    )\n}\nexport default OrderAddress;\n","import './OrderPayment.css';\nconst OrderPayment = ({setOrder}) => {\n    const selectedPaymentHandler = (e) => {\n        const paymentMethod = e.target.value;\n        setOrder(prevState => ({...prevState, payment: paymentMethod}))\n    }\n    return (\n        <article className=\"order-payment\">\n            <h3>Начин на плащане</h3>\n            <form className=\"payment-select\">\n                <label htmlFor=\"cash\">Кеш</label>\n                <input type=\"radio\" id=\"cash\" name=\"payment\" value=\"cash\" onChange={selectedPaymentHandler} />\n                <label htmlFor=\"cash\">С карта</label>\n                <input type=\"radio\" id=\"card\" name=\"payment\" value=\"card\" onChange={selectedPaymentHandler} />\n            </form>\n        </article>\n    )\n}\nexport default OrderPayment;","import './OrderDescription.css';\n\nconst OrderDescription = ({order,setOrder}) => {\n    const onBlurOrderDescription = (e) => {\n        const description = e.target.value;\n        setOrder(prevState => ({...prevState, description}))\n    }\n    return (\n        <article className=\"order-description\">\n            <h5 className=\"order-description-title\">\n                Бележка към поръчката\n            </h5>\n            <textarea name=\"description\" id=\"order-description\" cols=\"30\" rows=\"10\" onBlur={onBlurOrderDescription}></textarea>\n        </article>\n    )\n}\n\nexport default OrderDescription;","import './Order.css';\nimport Cart from \"../Cart/Cart\";\nimport OrderAddress from \"./OrderAddress/OrderAddress\";\nimport OrderPayment from \"./OrderPayment/OrderPayment\";\nimport {useState,useEffect} from 'react'\nimport OrderDescription from \"./OrderDescription/OrderDescription\";\nimport environments from \"../../environments\";\nimport userService from \"../../services/userService\";\n\nfunction Order({user, setUser, match,history,setNotification}) {\n    const [order,setOrder] = useState({cart:user?.cart});\n    const [delivery, setDelivery] = useState(0.5);\n\n    useEffect(() => {\n        if(Number(user?.cart?.totalPrice) >= 10) {\n            setDelivery(0.5);\n        }else {\n            const deliveryPerRegion = Number(environments.regions[order?.address?.region]);\n            if(!isNaN(deliveryPerRegion)) {\n                setDelivery(deliveryPerRegion);\n            }\n        }\n    },[user, order?.address]);\n\n\n    const onSubmitOrderHandler = () => {\n\n        const newOrder = {\n            cart:order?.cart?.products,\n            address: {region:order?.address?.region, location: order?.address?.location},\n            delivery: delivery,\n            totalPrice:order?.cart?.totalPrice + delivery,\n            description:order.description || '',\n            payment: order?.payment,\n            date: new Date().toLocaleString()\n        };\n        const validOrder = newOrder.cart && newOrder.address.location && newOrder.address.region && newOrder.delivery && newOrder.totalPrice && newOrder.payment;\n        if(validOrder) {\n            userService.editUserData({order:newOrder,userId: user._id})\n                .then(user =>  {\n                    user.cart = {};\n                    setUser(user);\n                    const notification = {\n                        message:'Благодарим ви за поръчката!',\n                        type: 'success'\n                    }\n                    setNotification(notification)\n                })\n                .then(() => history.push('/'))\n                .catch(console.error);\n        }else {\n            const notification = {\n                message: 'Моля, въведете адрес и начин на плащане!',\n                type: 'error'\n            }\n            setNotification(notification)\n        }\n\n    }\n    useEffect(() => {\n        setOrder(prevState => ({...prevState, cart:user?.cart}))\n    },[user?.cart?.products]);\n\n    return (\n        <section className=\"finish-order\">\n            <article className=\"finish-order-details\">\n                {\n                    user?.cart?.products?.length > 0\n                        ? <>\n                            <Cart user={user} setUser={setUser} match={match}/>\n                            <OrderAddress user={user} setUser={setUser} order={order} setOrder={setOrder} />\n                            <OrderPayment order={order} setOrder={setOrder}/>\n                            <OrderDescription order={order} setOrder={setOrder}/>\n                        </>\n                        : <p>Нямате добавени продукти в количката...</p>\n\n                }\n            </article>\n            {\n                user?.cart?.products?.length > 0\n                ? <>\n                        <article className=\"finish-order-summary\">\n                            {\n                                delivery !== undefined\n                                    ? <>\n                                        <p>Доставка: <strong>{delivery.toFixed(2) || 0.5}</strong> лв.</p>\n                                        <p className=\"finish-order-summary-total-process\">\n                                            Крайна сума: <strong>{(Number(order?.cart?.totalPrice) + Number(delivery)).toFixed(2)} лв.</strong>\n                                        </p>\n                                    </>\n                                    :null\n                            }\n                        </article>\n\n                        <button className=\"finish-order-submit-btn\" onClick={onSubmitOrderHandler}>\n                            Потвърди поръчката\n                        </button>\n                    </>\n                    : null\n            }\n\n        </section>\n\n    )\n}\n\nexport default Order;\n\n// {\n//     cart: [\n//         {\n//             name: types.String,\n//             price: types.Number,\n//             options: [\n//                 {\n//                     key: types.String,\n//                     values: [ types.String ]\n//                 }\n//             ],\n//             selected_options: [ types.String ],\n//             quantity: {\n//                 type: types.Number\n//             }\n//         }\n//     ],\n//         address: {\n//     region:types.String,\n//         location:types.String,\n//         delivery:types.Number\n// },\n//     note: types.String,\n//         totalPrice: types.Number\n// }\n","import './Contacts.css';\nimport {BiPhone} from 'react-icons/bi';\nimport {GoLocation,GoMail} from 'react-icons/go'\nfunction Contacts() {\n    return (\n        <section className=\"contacts\">\n            <article className=\"contacts-content\">\n                <article className=\"contacts-phone\">\n                    <BiPhone class=\"contacts-icon\"/>\n                    <h2>+359 878 123 123</h2>\n                </article>\n                <article className=\"contacts-email\">\n                    <GoMail class=\"contacts-icon\"/>\n                    <h2>delivery@fooddelivery.com</h2>\n                </article>\n                <article className=\"contacts-address\">\n                    <GoLocation class=\"contacts-icon\"/>\n                    <h2>гр.Смолян,бул.\"България\" 5</h2>\n                </article>\n            </article>\n        </section>\n    )\n}\nexport default Contacts\n","import environments from \"../environments\";\nimport {fetchWithCredentials} from \"../helpers\";\nconst path = environments.apiURL + 'posts/';\n\nconst postService = {\n    getPosts: () => {\n        return fetchWithCredentials(path,'GET')\n            .then(res => res.json())\n            .catch(console.error)\n    },\n    createPost: (post) => {\n        const fullPath = path + 'create_post';\n        return fetchWithCredentials(fullPath,'POST', post)\n            .then(res => res.json())\n            .catch(console.error)\n    },\n    editPost: (post) => {\n        const fullPath = path + 'edit_post';\n        return fetchWithCredentials(fullPath,'POST',post)\n            .then(res => res.json())\n            .catch(console.error);\n    },\n    deletePost: (post) => {\n        const fullPath = path + 'delete_post';\n        return fetchWithCredentials(fullPath,'POST',post)\n            .then(res => res.json())\n            .catch(console.error)\n    }\n}\n\nexport default postService\n","import './PostItem.css';\nimport {BiDislike, BiLike} from 'react-icons/bi';\nimport {useEffect, useState} from 'react';\nimport {FiCheck, FiEdit2, FiTrash} from 'react-icons/fi'\nimport {IoMdClose} from 'react-icons/io';\nimport postService from \"../../../services/postService\";\n\nconst PostItem = ({item, likeHandler, setAllPosts, user}) => {\n    const [liked, setLiked] = useState(false);\n    const [disliked, setDisliked] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n\n    const likeClickHandler = (type) => {\n        if (user && item.author._id !== user._id) {\n            if (type === 'like') {\n                if (!item.likes.includes(user._id)) {\n                    likeHandler(item, type);\n                }\n            }\n            if (type === 'dislike') {\n                if (!item.dislikes.includes(user._id)) {\n                    likeHandler(item, type);\n                }\n            }\n        }\n\n    };\n\n    useEffect(() => {\n        if (item?.likes?.includes(user?._id)) {\n            setLiked(true);\n        }\n        if (item?.dislikes?.includes(user?._id)) {\n            setDisliked(true);\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (item?.likes?.includes(user?._id)) {\n            setLiked(true);\n            setDisliked(false);\n        }\n        if (item?.dislikes?.includes(user?._id)) {\n            setDisliked(true);\n            setLiked(false);\n        }\n    }, [item.likes, item.dislikes]);\n\n    const toggleEditMode = () => {\n        setEditMode(prev => !prev);\n    };\n\n    const editPostSubmitHandler = (e) => {\n        const editedPost = Object.assign(item,{\n            title: e.target.title.value,\n            description: e.target.description.value\n        })\n       postService.editPost(editedPost)\n           .then(posts => setAllPosts(posts))\n           .catch(console.error)\n    };\n    const deletePostHandler = () => {\n        postService.deletePost(item)\n            .then(posts => setAllPosts(posts))\n            .then(()=> {\n                const notification = {\n                    message: 'Вашия коментар беше изтрит.',\n                    type: 'success'\n                }\n            })\n            .catch(console.error);\n    }\n    return (\n        <article className=\"post-item\">\n            <article className=\"post-item-content\">\n                {\n                    editMode\n                        ? <>\n                            <form className=\"edit-post-form\" onSubmit={editPostSubmitHandler}>\n                                <label htmlFor=\"post-form-input-title\">Заглавие:</label>\n                                <input type=\"text\" defaultValue={item.title} id=\"post-form-input-title\" name=\"title\"/>\n                                <label htmlFor=\"post-form-input-description\">Вашето мнение:</label>\n                                <textarea defaultValue={item.description} id=\"post-form-input-description\" name=\"description\"/>\n                                <article className=\"post-item-edit-controls form\">\n                                    <button><FiCheck className='post-item-edit-confirm'/></button>\n                                    <IoMdClose onClick={toggleEditMode}/>\n                                </article>\n                            </form>\n                        </>\n                        : <>\n                            <h4 className=\"post-item-content-title\">\n                                {item.title}\n                            </h4>\n                            <p className=\"post-item-content-description\">\n                                {item.description}\n                            </p>\n                        </>\n                }\n\n                <article className=\"post-item-details\">\n                    <p>{item.author.username}</p>\n                    {\n                        item?.author?._id === user?._id\n                            ? <article className=\"post-item-edit-controls\">\n                                {\n                                    editMode\n                                        // TO DO : move both svg into the form to take events\n                                        ? null\n                                        : <>\n                                            <FiEdit2 onClick={toggleEditMode}/>\n                                            <FiTrash onClick={deletePostHandler}/>\n                                        </>\n                                }\n                            </article>\n                            : null\n                    }\n\n                    <p>{item.created_at.split('T')[0]}</p>\n                </article>\n            </article>\n            <article className=\"post-item-likes\">\n                <article className=\"like-wrapper\">\n                    <p className=\"like-counter like\">{item.likes.length}</p>\n                    <BiLike className={liked ? \"like isLiked\" : \"like\"}\n                            onClick={likeClickHandler.bind(null, 'like')}\n                    />\n                </article>\n                <article className=\"like-wrapper\">\n                    <p className=\"like-counter dislike\">{item.dislikes.length}</p>\n                    <BiDislike className={disliked ? \"dislike isDisliked\" : \"dislike\"}\n                               onClick={likeClickHandler.bind(null, 'dislike')}\n                    />\n                </article>\n            </article>\n        </article>\n    )\n};\n\nexport default PostItem;\n","import './Posts.css';\nimport {useEffect, useState} from 'react';\nimport postService from \"../../services/postService\";\nimport PostItem from \"./PostItem/PostItem\";\nimport {BsChatDots} from 'react-icons/bs'\n\nexport const Posts = ({ setNotification,user}) => {\n    const [allPosts, setAllPosts] = useState([]);\n    useEffect(() => {\n        postService.getPosts()\n            .then(posts => {\n                setAllPosts(posts);\n            }).catch(console.error)\n    }, []);\n\n    const likeHandler = (post, type) => {\n        const likeAction = (up, down) => {\n            up.push(user._id);\n            const index = down.findIndex(d => d === user._id);\n            if (down.includes(user?._id)) {\n                down.splice(index, 1);\n            }\n        };\n\n        if (type === 'like') {\n            likeAction(post.likes, post.dislikes)\n        } else {\n            likeAction(post.dislikes, post.likes)\n        }\n\n        postService.editPost(post)\n            .then(res => {\n                setAllPosts(res);\n            })\n            .catch(console.error);\n    };\n\n    const addNewPostHandler = (e) => {\n        e.preventDefault();\n        const newPost = {\n            title: e.target.title.value,\n            description: e.target.description.value,\n            author: user._id\n        };\n        postService.createPost(newPost)\n            .then(res => {\n                const notification = {\n                    message: res.message,\n                    type: 'error'\n                };\n                if (res.message) {\n                    setNotification(notification);\n                } else {\n                    notification.message = 'Вашето мнение беше добавено!';\n                    notification.type = 'success';\n                    setNotification(notification);\n                    setAllPosts(res);\n                    e.target.title.value = '';\n                    e.target.description.value = '';\n                }\n            })\n            .catch(console.error)\n    };\n\n\n    return (\n        <section className=\"posts\">\n            <article className=\"post-list\">\n                {\n                    allPosts?.length === 0\n                        ? <p>Няма предишни мнения...</p>\n                        : <>\n                        <BsChatDots className=\"post-list-logo\"/>\n                            {\n                                allPosts?.sort((a, b) => Date.parse(b.created_at) - Date.parse(a.created_at))\n                                    .map(post => (\n                                        <PostItem key={post?.description + post?.title + post?.author.username}\n                                                  item={post}\n                                                  likeHandler={likeHandler}\n                                                  setAllPosts={setAllPosts}\n                                                  user={user}\n                                        />\n                                    ))\n                            }\n                            {\n                                !user\n                                    ?\n                                    <p className=\"post-list-title-info\">* Само регистрирани потребители оценяват мнения.</p>\n                                    : null\n                            }\n                        </>\n\n                }\n            </article>\n            {\n                user\n                    ? <article className=\"post-create\">\n                        <h4>Сподели мнение</h4>\n                        <form onSubmit={addNewPostHandler} className=\"new-post-form\">\n                            <input type=\"text\" required placeholder='Заглавие' name='title'/>\n                            <textarea\n                                name=\"description\"\n                                required\n                                placeholder=\"Вашето мнение...\"\n                                cols=\"30\"\n                                rows=\"10\">\n                            </textarea>\n                            <button className='post-create-btn'>Публикувай</button>\n                        </form>\n                    </article>\n                    : null\n            }\n\n        </section>\n    )\n};\n\nexport default Posts;\n","import './About.css';\nimport {IoMdRestaurant} from 'react-icons/io';\n\nexport default function () {\n    return(\n        <section className=\"about\">\n            <IoMdRestaurant className=\"about-logo\"/>\n            <article className=\"about-content\">\n                <q className=\"about-content-text\">За нас качеството на храната е основен приоритет. Нашата политика е да предлагаме на клиентите си това, което самите ние слагаме на нашата маса. Вече с натрупан богат опит в готвенето и кулинарията, създадохме нашия онлайн магазин. Ние вярваме, че забързаното ежедневие не трябва да бъде причина за компромис с избора на храна. Всеки работен ден Ви предлагаме разнообразно обедно меню и очакваме Вашия избор!</q>\n                <article className=\"about-footer\">\n                    <p className=\"about-footer-content\">\"Фууд Деливъри\" ЕООД\n                        ЕИК:1234412342\n                        със седалище:\n                        гр.Смолян,бул.\"България\" 5\n                        МОЛ.:Стефан Станчев</p>\n\n                    <img src=\"foodDelivery-icon.png\" alt=\"company logo\"/>\n                </article>\n            </article>\n\n        </section>\n    )\n}\n","import './Conditions.css'\nimport {CgNotes} from 'react-icons/cg';\nexport default function() {\n    return(\n        <section className=\"conditions\">\n            <CgNotes className=\"conditions-icon\"/>\n            <h2 className=\"condition-item-title\">Доставка</h2>\n            <article className=\"conditions-item\">\n                <p>Всеки работен ден Вие можете да поръчате храна за вкъщи или работното място от нашия онлайн магазин.\n                Освен чрез онлайн магазинa,\n                можете да поръчате с телефонно обаждане на номер <strong>0876 123 123</strong> или чрез e-mail:\n                <strong> delivery@fooddelivery.com</strong></p>\n            </article>\n            <h2 className=\"condition-item-title\">Цена на доставка</h2>\n            <article className=\"conditions-item\">\n                <p>Цената на доставката е <strong>0.50лв</strong>. Поръчки за кваралите Каптажа, Райково и Устово, които са на стойност под <strong>10лв</strong>., ще се таксуват с цена на доставка - <strong>1.50лв</strong>.</p>\n            </article>\n            <h2 className=\"condition-item-title\">Работно време</h2>\n            <article className=\"conditions-item\">\n                <p>Доставките на храна се извършват от понеделник до петък до <strong>13:00</strong> часа.\n                    Приемаме поръчки до <strong>12:30ч</strong>аса!\n                    Почивни дни - <strong>събота и неделя</strong>, както и <strong>официалните празници</strong>.</p>\n            </article>\n        </section>\n    )\n}\n","import './Notification.css';\nimport {MdClose, MdDone, MdError} from 'react-icons/md'\n\nconst Notification = ({notification, setNotification}) => {\n\n    const closeNotification = () => {\n        setNotification({})\n    }\n\n    if(notification?.type !== 'error') {\n        setTimeout(() => {\n            setNotification({})\n        },2500)\n    }\n\n    return (\n        <article className={'notification' + ' ' + notification?.type}>\n            {\n                notification?.type === 'error'\n                    ? <>\n                        <MdError className='notification-icon'/>\n                        <article className='notification-content'>\n                            <p>{notification?.message}</p>\n                        </article>\n                        <MdClose\n                            className='notification-close'\n                            onClick={closeNotification}\n                        />\n                    </>\n\n                    : <>\n                        <MdDone className='notification-icon'/>\n                        <article className='notification-content'>\n                            <p>{notification?.message}</p>\n                        </article>\n                    </>\n\n            }\n\n        </article>\n    )\n}\n\nexport default Notification;\n","import './ProfileInfo.css';\nimport {useState, useEffect} from 'react';\nimport userService from \"../../../services/userService\";\n\nconst ProfileInfo = ({user, setUser, setNotification,history}) => {\n\n    useEffect(() => {\n        return () => setNotification({});\n    },[])\n\n    const [editMode, setEditMode] = useState(false);\n\n    const editModeToggle = () => {\n        setEditMode(prev => !prev)\n    };\n\n    const checkForMinLength = (obj, count, e) => {\n        const [key,value] = Object.entries(obj)[0];\n        if (value.length < count) {\n            const notification = {\n                message: `Твърде малко символа за \"${key}\". Трябва да бъдат минимум ${count} символа.`,\n                type: 'error'\n            }\n            e.target[key].value = user[key];\n            setNotification(notification);\n            return Promise.reject('not enough symbols')\n        }\n        return Promise.resolve()\n    };\n\n    const editUserInfoHandler = async (e) => {\n        e.preventDefault();\n        const username = e.target.username.value;\n        const email = e.target.email.value;\n        const phone = e.target.phone.value;\n        const newData = {};\n        let invalidInputData = false;\n        if (username !== user.username) {\n           await checkForMinLength({username}, 3, e)\n                .then(() => {\n                    newData.username = username\n                })\n                .catch(() => invalidInputData = true);\n            if (invalidInputData) return\n        }\n        if (phone !== user.phone) {\n           await checkForMinLength({phone}, 5, e)\n                .then(() => newData.phone = phone)\n                .catch(() => invalidInputData = true);\n            if (invalidInputData) return\n        }\n        if (email !== user.email) {\n           await checkForMinLength({email}, 6, e)\n                .then(() => newData.email = email)\n                .catch(() => invalidInputData = true);\n            if (invalidInputData) return;\n            if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/g)){\n                setNotification({\n                    message: 'Невалиден емайл адрес',\n                    type: 'error'\n                });\n                e.target.email.value = user.email;\n                editModeToggle();\n                return;\n            }\n        }\n        if (Object.keys(newData).length === 0) {\n            return editModeToggle();\n        }\n        userService.editUserData({newData,userId: user._id})\n            .then(res => {\n                if (res.message) {\n                    const mongoError = res.message.split('dup key: ');\n                    if(mongoError.length > 0) {\n                        const curMessage = JSON.parse(JSON.stringify(mongoError[1].split(' ')));\n                        const duplicatedProp = (Object.values(curMessage)[1]).split(':')[0].trim();\n                        e.target[duplicatedProp].value = user[duplicatedProp];\n                        setNotification({\n                            message: `Името вече е заето - ${duplicatedProp}`,\n                            type: 'error'\n                        });\n                         editModeToggle();\n                         return;\n                    }\n                    const notification = {\n                        message: res.message,\n                        type: 'error'\n                    };\n                    setNotification(notification);\n                    return editModeToggle();\n                }\n\n                    const notification = {\n                        message: 'Промените са запаметени.',\n                        type: 'success'\n                    };\n                    setNotification(notification);\n                    setUser(res);\n                    editModeToggle();\n\n            })\n            .catch(history.push('/profile'));\n    };\n    return (\n        <article className=\"profile-info\">\n            <form className=\"profile-info-form\" onSubmit={editUserInfoHandler}>\n                <label htmlFor=\"username\">Потребителско име</label>\n                <input type=\"text\"\n                       defaultValue={user?.username}\n                       name=\"username\"\n                       disabled={!editMode}\n                       className={editMode ? 'editing' : ''}\n                />\n                <label htmlFor=\"email\">Е-майл</label>\n                <input type=\"email\"\n                       defaultValue={user?.email}\n                       name=\"email\"\n                       disabled={!editMode}\n                       className={editMode ? 'editing' : ''}\n                />\n                <label htmlFor=\"phone\">Телефон</label>\n                <input type=\"phone\"\n                       defaultValue={user?.phone}\n                       name=\"phone\"\n                       disabled={!editMode}\n                       className={editMode ? 'editing' : ''}\n                />\n                <article className=\"profile-info-form-btn-wrapper\">\n                    <button className={!editMode ? \"profile-form-btn edit\" : \"profile-form-btn back\"}\n                            type=\"button\"\n                            onClick={editModeToggle}\n                    >{editMode ? \"Назад\" : \"Редактирай\"}\n                    </button>\n                    {\n                        editMode\n                            ? <button\n                                type=\"submit\"\n                                className=\"profile-form-btn\"\n                            >Потвърди\n                            </button>\n                            : null\n                    }\n                </article>\n            </form>\n\n        </article>\n    )\n}\n\nexport default ProfileInfo;\n","import './ProfileAddressItem.css';\nimport {useState} from 'react';\nimport {FiCheck, FiEdit2, FiTrash} from 'react-icons/fi'\nimport {IoMdClose} from 'react-icons/io';\nimport environments from \"../../../../environments\";\n\nconst mapBgRegions = environments.mapBgRegions;\n\nconst ProfileAddressItem = ({address, index,onDeleteAddressHandler,onUpdateExistAddressHandler, setNotification}) => {\n    const [editMode, setEditMode] = useState(false);\n    const [location,setLocation] = useState(address.location);\n\n    const onChangeLocationHandler = (e) => {\n        setLocation(prev => e.target.value);\n    };\n\n    const editExistAddressHandler = () => {\n        if(location === address.location) {\n            return toggleEditMode();\n        }\n        if(location.length < 10) {\n            setNotification({\n                message: 'Твърде кратък адрес! Необходими са минимум 10 символа.',\n                type: 'error'\n            });\n            toggleEditMode(false);\n            return\n        }\n        const newAddress = {\n            region: address.region,\n            location: location,\n            delivery: address.delivery\n        };\n        onUpdateExistAddressHandler(address,newAddress,index);\n    };\n\n    const toggleEditMode = (changes) => {\n        if (!changes) {\n            setLocation(address.location);\n        }\n        setEditMode(prev => !prev);\n    };\n\n    const deleteCurrentAddress = () => {\n        return onDeleteAddressHandler(address, Number(index));\n    };\n\n    return (\n        <article className=\"profile-address-item\">\n            <article className=\"profile-address-item-wrapper region\">\n                <label htmlFor=\"add-address-region\">Регион</label>\n                <input type=\"text\"\n                       id=\"add-address-region\"\n                       name=\"region\"\n                       defaultValue={mapBgRegions[address.region]}\n                       disabled={true}\n                />\n            </article>\n\n            <article className=\"profile-address-item-wrapper location\">\n                <label htmlFor=\"add-address-location\">Точен адрес</label>\n                <input type=\"text\"\n                       id=\"add-address-location\"\n                       name=\"location\"\n                       value={location}\n                       disabled={!editMode}\n                       onChange={onChangeLocationHandler}\n                       className={editMode ? 'editing-location' : ''}\n                />\n            </article>\n            <article className=\"profile-address-item-wrapper buttons\">\n                {\n\n                    editMode\n                        ? <>\n                            <FiCheck className=\"confirm\" onClick={editExistAddressHandler}/>\n                            <IoMdClose onClick={toggleEditMode.bind(null,false)}/>\n                        </>\n\n                        : <>\n                            <FiEdit2 onClick={toggleEditMode}/>\n                            <FiTrash onClick={deleteCurrentAddress}/>\n                        </>\n\n\n                }\n            </article>\n        </article>\n    )\n}\n\nexport default ProfileAddressItem;\n","import './ProfileAddress.css';\nimport {useState} from 'react';\nimport ProfileAddressItem from \"./ProfileAddressItem/ProfileAddressItem\";\nimport AddNewAddressForm from '../AddNewAddressForm/AddNewAddressForm';\n\n\nconst ProfileAddress = ({user, setUser, setNotification, onDeleteAddressHandler, onUpdateExistAddressHandler}) => {\n    const [addAddressMode, setAddAddressMode] = useState(false);\n\n    const toggleNewAddressForm = () => {\n        setAddAddressMode(prev => !prev);\n    };\n\n    return (\n        <section className=\"profile-address\">\n            {\n                user?.address.map((adr, index) => (\n                    <ProfileAddressItem\n                        key={adr?.location + adr?.region}\n                        address={adr}\n                        index={index}\n                        onDeleteAddressHandler={onDeleteAddressHandler}\n                        onUpdateExistAddressHandler={onUpdateExistAddressHandler}\n                        setNotification={setNotification}\n                    />\n                ))\n            }\n\n            {\n                user?.address.length === 0\n                    ? <p>Нямате добавени адреси...</p>\n                    : null\n            }\n\n            {\n                addAddressMode\n                    ? <AddNewAddressForm user={user} setUser={setUser} toggleNewAddressForm={toggleNewAddressForm}/>\n                    : <button className=\"add-new-address-btn\"\n                              onClick={toggleNewAddressForm}\n                    >\n                        Добави нов адрес\n                    </button>\n            }\n\n\n        </section>\n    )\n}\n\nexport default ProfileAddress;\n","import './ShowOrderCart.css';\nimport {FiShoppingCart} from 'react-icons/fi';\nimport {IoMdClose, IoMdSearch} from 'react-icons/io'\n\nfunction ShowOrderCart({order,closeHandler}) {\n\n    const getCartProductsPrice = (products) => {\n        let totalPrice = 0;\n        products.forEach(product => {\n            totalPrice += product.price * product.quantity\n        });\n        return totalPrice.toFixed(2) + ' лв.'\n    }\n    return (\n        <article className=\"show-order-cart\">\n                <article className=\"show-order-cart-icons\">\n                    <FiShoppingCart className=\"profile-order-cart-icon\"/>\n                    <IoMdClose className=\"close-order-cart\"\n                               onClick={closeHandler}\n                    />\n                </article>\n            <table className=\"order-cart-table\">\n                <thead>\n                <tr>\n                    <th>Продукт</th>\n                    <th>Количество</th>\n                    <th>Единична цена</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    order?.cart?.map((item,i) => (\n                        <tr key={i}>\n                            <td>{item.name}</td>\n                            <td>{item.quantity}</td>\n                            <td>{Number(item.price).toFixed(2)} лв.</td>\n                        </tr>\n                    ))\n\n                }\n                <tr className=\"tr-summary\">\n                    <th>Цена продукти</th>\n                    <th>Доставка</th>\n                    <th>Крайна цена</th>\n                </tr>\n                <tr className=\"tr-summary-content\">\n                    <td className=\"tr-summary-content-item\">{getCartProductsPrice(order.cart)}</td>\n                    <td className=\"tr-summary-content-item\">{Number(order.delivery).toFixed(2)} лв.</td>\n                    <td className=\"tr-summary-content-item\">{Number(order.totalPrice).toFixed(2)} лв.</td>\n                </tr>\n                </tbody>\n            </table>\n            {\n                order.description\n                    ? <article className=\"show-order-cart-description\">\n                        <p className=\"description-title\">Бележка към поръчката:</p>\n                        <q>{order.description}</q>\n                    </article>\n                    : null\n            }\n\n        </article>\n    )\n}\n\nexport default ShowOrderCart;\n","import './ProfileOrders.css';\nimport {IoMdSearch} from 'react-icons/io';\nimport {useState} from 'react'\nimport ShowOrderCart from './ShowOrderCart/ShowOrderCart';\n\nfunction ProfileOrders({user}){\n\n    const[showCart,setShowCart] = useState(false);\n    const[currentOrder,setCurrentOrder] = useState(undefined);\n\n    const toggleShowCart = (order) => {\n        if(!order) {\n             setShowCart(prev => !prev);\n             setCurrentOrder(prev => undefined);\n             return;\n        }\n        setShowCart(prev => !prev);\n        setCurrentOrder(prev => order);\n    };\n\n\n    return (\n        <article className=\"profile-orders\">\n            {\n                user?.orders.length === 0\n                    ? <p>Все още нямате направени поръчки...</p>\n                    :  <table className=\"order-table\">\n                        <thead>\n                        <tr>\n                            <th>Дата</th>\n                            <th>Адрес</th>\n                            <th>Плащане</th>\n                            <th>Крайна цена</th>\n                            <th>Продукти</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            user?.orders.sort((a,b) => Date.parse(b.date) - Date.parse(a.date)).map(order => (\n                                <tr key={order._id}>\n                                    <td>{order.date}</td>\n                                    <td>{order.address.location}</td>\n                                    <td>{order.payment}</td>\n                                    <td>{Number(order.totalPrice).toFixed(2)} лв.</td>\n                                    <td><IoMdSearch\n                                        className=\"magnifier\"\n                                        onClick={toggleShowCart.bind(null,order)}\n                                        disabled={showCart}\n                                    />\n                                    </td>\n                                </tr>\n                            ))\n\n                        }\n                        </tbody>\n                    </table>\n            }\n            {\n                showCart\n                    ? <ShowOrderCart order={currentOrder} closeHandler={toggleShowCart}/>\n                    : null\n            }\n        </article>\n    )\n}\nexport default ProfileOrders;\n","import './Profile.css';\nimport {NavLink, Route, Switch} from 'react-router-dom'\nimport {FaUser} from 'react-icons/fa';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport ProfileAddress from \"./ProfileAddress/ProfileAddress\";\nimport userService from \"../../services/userService\";\nimport ProfileOrders from \"./ProfileOrders/ProfileOrders\";\n\n\nconst Profile = ({user, setUser, match, setNotification}) => {\n\n    const onDeleteAddressHandler = (adr, idx) => {\n        user.address.splice(idx, 1);\n        userService.editUserData({deleteAddress: adr, userId: user._id});\n        setUser(user);\n    };\n\n    const onUpdateExistAddressHandler = (oldAddress, newAddres, idx) => {\n        user.address.splice(idx, 1, newAddres);\n        userService.editUserData({deleteAddress: oldAddress, userId: user._id});\n        userService.editUserData({addAddress: newAddres, userId: user._id});\n        setUser(user);\n    }\n    return (\n\n        <section className=\"profile\">\n            {\n                user\n                    ? <>\n                        <section className=\"profile-header\">\n                            <nav className=\"profile-header-nav\">\n                                <NavLink\n                                    to={match.url}\n                                    exact\n                                    activeClassName=\"is-active\">\n                                    Моите данни\n                                </NavLink>\n                                <NavLink\n                                    to={match.url + '/address'}\n                                    exact\n                                    activeClassName=\"is-active\">\n                                    Моите адреси\n                                </NavLink>\n                                <NavLink\n                                    to={match.url + '/orders'}\n                                    exact\n                                    activeClassName=\"is-active\">\n                                    Моите поръчки\n                                </NavLink>\n                            </nav>\n                        </section>\n\n                        <section className=\"profile-content\">\n                            <article className=\"profile-icon-wrapper\">\n                                <FaUser className=\"profile-icon\"/>\n                            </article>\n                            <Switch>\n                                <Route path=\"/profile\" exact render={(props) => (\n                                    <ProfileInfo {...props}\n                                                 user={user}\n                                                 setUser={setUser}\n                                                 setNotification={setNotification}\n                                    />\n                                )}/>\n                                <Route path=\"/profile/address\" exact render={(props) => (\n                                    <ProfileAddress {...props}\n                                                    user={user}\n                                                    setUser={setUser}\n                                                    setNotification={setNotification}\n                                                    onDeleteAddressHandler={onDeleteAddressHandler}\n                                                    onUpdateExistAddressHandler={onUpdateExistAddressHandler}\n                                    />\n                                )}/>\n                                <Route path=\"/profile/orders\" exact render={(props) => (\n                                    <ProfileOrders {...props} user={user}/>\n                                )}/>\n                            </Switch>\n                        </section>\n                    </>\n                    : null\n            }\n\n        </section>\n\n\n    )\n}\n;\n\nexport default Profile;\n","import \"./App.css\";\nimport foodService from \"./services/foodService\";\nimport userService from \"./services/userService\";\n\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Menu from \"./components/Menu/Menu\";\nimport Register from \"./components/Register/Register\"\nimport Login from \"./components/Login/Login\";\nimport Logout from \"./components/Logout/Logout\";\nimport Order from \"./components/Order/Order\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Posts from \"./components/Posts/Posts\";\nimport About from \"./components/About/About\";\nimport Conditions from \"./components/Conditions/Conditions\";\n\n\nimport {Route, Switch} from \"react-router-dom\";\nimport {Component} from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Notification from \"./components/Notification/Notification\";\nimport Profile from \"./components/Profile/Profile\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: [],\n            currentUser: undefined,\n            notification: {\n                message: '',\n                type: ''\n            }\n        }\n        this.setUser = this.setUser.bind(this)\n        this.getUserInfo = this.getUserInfo.bind(this);\n        this.setNotification = this.setNotification.bind(this);\n    }\n\n    componentDidMount() {\n        foodService.getDailyMenu()\n            .then(dishes => {\n                this.setState(state => ({...state, menu: dishes}))\n            }).catch(err => console.error(err));\n        userService.getUserInfo()\n            .then(user => {\n                if (user) {\n                    this.setState((state) => ({currentUser: user.message ? undefined : user}))\n                }\n            }).catch(err => console.error(err));\n    }\n\n    setUser(user) {\n        return this.setState((state) => (\n            {\n                ...state,\n                currentUser: user\n            }\n        ))\n    }\n\n    setNotification(notification) {\n        return this.setState((state) => (\n            {\n                ...state,\n                notification\n            }\n        ))\n    }\n\n    getUserInfo() {\n        userService.getUserInfo()\n            .then(user => {\n                console.log(user);\n                this.setState((state) => ({...state, currentUser: user}))\n            }).catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header user={this.state.currentUser}/>\n                {\n                    this.state.notification.message\n                        ? <Notification\n                            notification={this.state.notification}\n                            setNotification={this.setNotification}\n                        />\n                        : null\n                }\n                <main className=\"app-main\">\n                    <Switch>\n\n                        <Route path=\"/\" exact render={(props) => (\n                            <Menu {...props}\n                                  menu={this.state.menu}\n                                  user={this.state.currentUser}\n                                  setUser={this.setUser}\n                                  setNotification={this.setNotification}\n                            />\n                        )}/>\n\n                        <Route path=\"/register\" exact render={(props) => (\n                            <Register {...props}\n                                      setNotification={this.setNotification}\n                            />\n                        )}/>\n\n                        <Route path=\"/login\" exact render={(props) => (\n                            <Login {...props}\n                                   setUser={this.setUser}\n                                   setNotification={this.setNotification}\n                            />\n                        )}/>\n\n                        <Route path=\"/profile\" render={(props) => (\n                            <Profile {...props}\n                                     user={this.state.currentUser}\n                                     setUser={this.setUser}\n                                     setNotification={this.setNotification}\n                            />\n                        )}/>\n\n\n                        <Route path=\"/logout\" exact render={(props) => (\n                            <Logout {...props} setUser={this.setUser}/>\n                        )}/>\n\n                        <Route path=\"/cart\" exact render={(props) => (\n                            <Cart {...props}\n                                  setUser={this.setUser}\n                                  user={this.state.currentUser}\n                                  setNotification={this.setNotification}\n                            />\n                        )}/>\n\n                        <Route path=\"/order\" exact render={(props) => (\n                            <Order {...props}\n                                   setUser={this.setUser}\n                                   user={this.state.currentUser}\n                                   setNotification={this.setNotification}\n                            />\n                        )}/>\n\n                        <Route path=\"/posts\" exact render={(props) => (\n                            <Posts {...props}\n                                   user={this.state.currentUser}\n                                   setNotification={this.setNotification}\n                            />\n                        )}/>\n                        <Route path=\"/contacts\" exact component={Contacts}/>\n                        <Route path=\"/about\" exact component={About}/>\n                        <Route path=\"/conditions\" exact component={Conditions}/>\n                    </Switch>\n                </main>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}